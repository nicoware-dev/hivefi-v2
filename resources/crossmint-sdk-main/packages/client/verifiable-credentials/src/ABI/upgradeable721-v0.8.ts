export const nftZeroEight = {
    abi: [
        {
            inputs: [],
            name: "baseURI",
            outputs: [
                {
                    internalType: "string",
                    name: "",
                    type: "string",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "tokenId",
                    type: "uint256",
                },
            ],
            name: "burn",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "contractURI",
            outputs: [
                {
                    internalType: "string",
                    name: "",
                    type: "string",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "hasSetBaseURI",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "admins",
                    type: "address[]",
                },
                {
                    components: [
                        {
                            internalType: "address",
                            name: "paymentsRecipient",
                            type: "address",
                        },
                        {
                            internalType: "address",
                            name: "primaryRoyaltyRecipient",
                            type: "address",
                        },
                        {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256",
                        },
                        {
                            internalType: "uint256",
                            name: "supplyLimit",
                            type: "uint256",
                        },
                        {
                            internalType: "uint256",
                            name: "royaltyBps",
                            type: "uint256",
                        },
                        {
                            internalType: "string",
                            name: "name",
                            type: "string",
                        },
                        {
                            internalType: "string",
                            name: "symbol",
                            type: "string",
                        },
                        {
                            internalType: "string",
                            name: "baseURI",
                            type: "string",
                        },
                        {
                            internalType: "bool",
                            name: "transferable",
                            type: "bool",
                        },
                        {
                            internalType: "bool",
                            name: "openseaFilterEnabled",
                            type: "bool",
                        },
                        {
                            internalType: "string",
                            name: "contractURI",
                            type: "string",
                        },
                    ],
                    internalType: "struct IUpgradeable721.CollectionParams",
                    name: "params",
                    type: "tuple",
                },
            ],
            name: "initialize",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "recipient",
                    type: "address",
                },
            ],
            name: "mintTo",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "recipient",
                    type: "address",
                },
                {
                    internalType: "string",
                    name: "customTokenURI",
                    type: "string",
                },
            ],
            name: "mintToWithURI",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "openseaFilterEnabled",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "paymentsEnabled",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "paymentsRecipient",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "price",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "primaryRoyaltyRecipient",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "recipient",
                    type: "address",
                },
                {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                },
            ],
            name: "publicMint",
            outputs: [],
            stateMutability: "payable",
            type: "function",
        },
        {
            inputs: [],
            name: "royaltyBps",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "baseURI_",
                    type: "string",
                },
            ],
            name: "setBaseURI",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "contractURI_",
                    type: "string",
                },
            ],
            name: "setContractURI",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "name_",
                    type: "string",
                },
            ],
            name: "setName",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "bool",
                    name: "enabled",
                    type: "bool",
                },
            ],
            name: "setOpenseaFilterEnabled",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "paymentsRecipient_",
                    type: "address",
                },
            ],
            name: "setPaymentsRecipient",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "price_",
                    type: "uint256",
                },
            ],
            name: "setPrice",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "primaryRoyaltyRecipient_",
                    type: "address",
                },
                {
                    internalType: "uint256",
                    name: "royaltyBps_",
                    type: "uint256",
                },
            ],
            name: "setRoyaltyInfo",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "supplyLimit_",
                    type: "uint256",
                },
            ],
            name: "setSupplyLimit",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "symbol_",
                    type: "string",
                },
            ],
            name: "setSymbol",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "tokenId",
                    type: "uint256",
                },
                {
                    internalType: "string",
                    name: "tokenURI_",
                    type: "string",
                },
            ],
            name: "setTokenURI",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "setTransferable",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "supplyLimit",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "totalSupply",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "transferable",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "paymentsRecipient_",
                    type: "address",
                },
                {
                    internalType: "uint256",
                    name: "price_",
                    type: "uint256",
                },
                {
                    internalType: "uint256",
                    name: "supplyLimit_",
                    type: "uint256",
                },
            ],
            name: "updatePaymentsParams",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
    ],
    bytecode: {
        object: "0x",
        sourceMap: "",
        linkReferences: {},
    },
    deployedBytecode: {
        object: "0x",
        sourceMap: "",
        linkReferences: {},
    },
    methodIdentifiers: {
        "baseURI()": "6c0360eb",
        "burn(uint256)": "42966c68",
        "contractURI()": "e8a3d485",
        "hasSetBaseURI()": "5958b247",
        "initialize(address[],(address,address,uint256,uint256,uint256,string,string,string,bool,bool,string))":
            "d448b5c7",
        "mintTo(address)": "755edd17",
        "mintToWithURI(address,string)": "d65971f3",
        "openseaFilterEnabled()": "a8f84b34",
        "paymentsEnabled()": "a9ccdc01",
        "paymentsRecipient()": "9c3ab12d",
        "price()": "a035b1fe",
        "primaryRoyaltyRecipient()": "a5352023",
        "publicMint(address,uint256)": "ce6df2b9",
        "royaltyBps()": "c63adb2b",
        "setBaseURI(string)": "55f804b3",
        "setContractURI(string)": "938e3d7b",
        "setName(string)": "c47f0027",
        "setOpenseaFilterEnabled(bool)": "f41f30f7",
        "setPaymentsRecipient(address)": "c1787c7c",
        "setPrice(uint256)": "91b7f5ed",
        "setRoyaltyInfo(address,uint256)": "e2e784d5",
        "setSupplyLimit(uint256)": "361fab25",
        "setSymbol(string)": "b84c8246",
        "setTokenURI(uint256,string)": "162094c4",
        "setTransferable(bool)": "9cd23707",
        "supplyLimit()": "19d1997a",
        "totalSupply()": "18160ddd",
        "transferable()": "92ff0d31",
        "updatePaymentsParams(address,uint256,uint256)": "1a0251b0",
    },
    rawMetadata:
        '{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hasSetBaseURI","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"admins","type":"address[]"},{"components":[{"internalType":"address","name":"paymentsRecipient","type":"address"},{"internalType":"address","name":"primaryRoyaltyRecipient","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"supplyLimit","type":"uint256"},{"internalType":"uint256","name":"royaltyBps","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"bool","name":"openseaFilterEnabled","type":"bool"},{"internalType":"string","name":"contractURI","type":"string"}],"internalType":"struct IUpgradeable721.CollectionParams","name":"params","type":"tuple"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"mintTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"customTokenURI","type":"string"}],"name":"mintToWithURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"openseaFilterEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentsEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentsRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"primaryRoyaltyRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"publicMint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"royaltyBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI_","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"contractURI_","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setOpenseaFilterEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"paymentsRecipient_","type":"address"}],"name":"setPaymentsRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"price_","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"primaryRoyaltyRecipient_","type":"address"},{"internalType":"uint256","name":"royaltyBps_","type":"uint256"}],"name":"setRoyaltyInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"supplyLimit_","type":"uint256"}],"name":"setSupplyLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"symbol_","type":"string"}],"name":"setSymbol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"tokenURI_","type":"string"}],"name":"setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"name":"setTransferable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"supplyLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transferable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"paymentsRecipient_","type":"address"},{"internalType":"uint256","name":"price_","type":"uint256"},{"internalType":"uint256","name":"supplyLimit_","type":"uint256"}],"name":"updatePaymentsParams","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"baseURI()":{"details":"Get the base URI for the contract.","returns":{"_0":"The current base URI."}},"burn(uint256)":{"details":"Burn a specific token.","params":{"tokenId":"The id of the token to burn."}},"contractURI()":{"details":"Get the contract URI for the contract.","returns":{"_0":"The current contract URI."}},"hasSetBaseURI()":{"details":"Check if the base URI has been set.","returns":{"_0":"Whether or not the base URI has been set."}},"initialize(address[],(address,address,uint256,uint256,uint256,string,string,string,bool,bool,string))":{"details":"Initialize the contract. Can only be called once.","params":{"admins":"The initial admin of the contract.","params":"collection data to initialize with"}},"mintTo(address)":{"details":"Mint a new token to a specific address","params":{"recipient":"The address to receive the newly minted token."}},"mintToWithURI(address,string)":{"details":"Mint a token that has a custom tokenURI which overrides the baseURI","params":{"customTokenURI":"a full token URI","recipient":"The address to receive the newly minted token."}},"openseaFilterEnabled()":{"details":"Check if the OpenSea filter is enabled.","returns":{"_0":"Whether or not the OpenSea filter is currently enabled."}},"paymentsEnabled()":{"details":"represented by the payments recipient set on the contract","returns":{"_0":"paymentsEnabled whether or not payments are enabled on the contract"}},"paymentsRecipient()":{"details":"Get the payments recipient address.","returns":{"_0":"Address of the payments recipient."}},"price()":{"details":"Get the price of a single token.","returns":{"_0":"The current price of a single token."}},"primaryRoyaltyRecipient()":{"details":"Get the primary recipient of the royalties.","returns":{"_0":"Address of the primary royalty recipient."}},"publicMint(address,uint256)":{"details":"Mint new tokens to a specific address","params":{"amount":"The number of tokens to mint.","recipient":"The address to receive the tokens"}},"royaltyBps()":{"details":"Get the royalty basis points (bps).","returns":{"_0":"The current royalty basis points."}},"setBaseURI(string)":{"details":"Set the baseURI of the token","params":{"baseURI_":"The new name of the token."}},"setContractURI(string)":{"details":"Set the contractURI of the token","params":{"contractURI_":"The new URI of the contract."}},"setName(string)":{"details":"Set the name of the token.","params":{"name_":"The new name of the token."}},"setOpenseaFilterEnabled(bool)":{"details":"Enable or disable the OpenSea filter.","params":{"enabled":"The new status of the OpenSea filter."}},"setPaymentsRecipient(address)":{"details":"Sets the address to receive payments.","params":{"paymentsRecipient_":"The new address to receive payments."}},"setPrice(uint256)":{"details":"Sets the price of the token.","params":{"price_":"The new price of the token."}},"setRoyaltyInfo(address,uint256)":{"details":"Set the royalty information.","params":{"primaryRoyaltyRecipient_":"The address to receive the royalties.","royaltyBps_":"The basis points percentage of the royalties."}},"setSupplyLimit(uint256)":{"details":"Sets the maximum supply of the token.","params":{"supplyLimit_":"The new maximum supply of the token."}},"setSymbol(string)":{"details":"Set the symbol of the token.","params":{"symbol_":"The new name of the token."}},"setTokenURI(uint256,string)":{"details":"Set a custom tokenURI for a token that will override the baseURI","params":{"tokenId":"The id of the token.","tokenURI_":"The new URI of the token."}},"setTransferable(bool)":{"details":"Set the transferability of the token.","params":{"value":"The new transferability status of the token."}},"supplyLimit()":{"details":"Get the supply limit for the tokens.","returns":{"_0":"The current supply limit."}},"totalSupply()":{"details":"Get the current circulating supply","returns":{"_0":"The amount of the royalties."}},"transferable()":{"details":"Check if transfers are allowed.","returns":{"_0":"Whether or not the transfers are currently allowed."}},"updatePaymentsParams(address,uint256,uint256)":{"details":"Sets all payments related properties at once","params":{"paymentsRecipient_":"The new recipient for the Crossmint payments product and public mint function.","price_":"The new price of each token.","supplyLimit_":"The new supply limit for the collection."}}},"title":"Upgradeable721","version":1},"userdoc":{"kind":"user","methods":{"paymentsEnabled()":{"notice":"This should only be enabled through our API"},"paymentsRecipient()":{"notice":"this acts as the source of truth for whether or not payments is enabled on a contract."},"price()":{"notice":"the price can be set while payments are disabled for a contract."},"publicMint(address,uint256)":{"notice":"this function should only ever be allowed if payments are enabled on the contract"},"setPaymentsRecipient(address)":{"notice":"Setting the zero address here represents disabling payments on the contract"}},"notice":"Crossmint\'s NFT Collection Contract","version":1}},"settings":{"compilationTarget":{"contracts/mintAPI/interfaces/IUpgradeable721.sol":"IUpgradeable721"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/=node_modules/@openzeppelin/",":ds-test/=lib/forge-std/lib/ds-test/src/",":forge-std/=lib/forge-std/src/",":hardhat/=node_modules/hardhat/",":operator-filter-registry/=node_modules/operator-filter-registry/"]},"sources":{"contracts/mintAPI/interfaces/IUpgradeable721.sol":{"keccak256":"0xc0b1e60c3a06bd0da2c241e378ff0c9908e73db8e279f84a868081d65e6cdd99","license":"UNLICENSED","urls":["bzz-raw://4d66f17168c598be16e7cba65f8bf079316365eb4699663b5748a36199041195","dweb:/ipfs/QmemrwfZrFbcUP9b1ThcxS7k7eK64rRT49qZtzir8p5uMV"]}},"version":1}',
    metadata: {
        compiler: {
            version: "0.8.19+commit.7dd6d404",
        },
        language: "Solidity",
        output: {
            abi: [
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "baseURI",
                    outputs: [
                        {
                            internalType: "string",
                            name: "",
                            type: "string",
                        },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "uint256",
                            name: "tokenId",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "burn",
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "contractURI",
                    outputs: [
                        {
                            internalType: "string",
                            name: "",
                            type: "string",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "hasSetBaseURI",
                    outputs: [
                        {
                            internalType: "bool",
                            name: "",
                            type: "bool",
                        },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "address[]",
                            name: "admins",
                            type: "address[]",
                        },
                        {
                            internalType: "struct IUpgradeable721.CollectionParams",
                            name: "params",
                            type: "tuple",
                            components: [
                                {
                                    internalType: "address",
                                    name: "paymentsRecipient",
                                    type: "address",
                                },
                                {
                                    internalType: "address",
                                    name: "primaryRoyaltyRecipient",
                                    type: "address",
                                },
                                {
                                    internalType: "uint256",
                                    name: "price",
                                    type: "uint256",
                                },
                                {
                                    internalType: "uint256",
                                    name: "supplyLimit",
                                    type: "uint256",
                                },
                                {
                                    internalType: "uint256",
                                    name: "royaltyBps",
                                    type: "uint256",
                                },
                                {
                                    internalType: "string",
                                    name: "name",
                                    type: "string",
                                },
                                {
                                    internalType: "string",
                                    name: "symbol",
                                    type: "string",
                                },
                                {
                                    internalType: "string",
                                    name: "baseURI",
                                    type: "string",
                                },
                                {
                                    internalType: "bool",
                                    name: "transferable",
                                    type: "bool",
                                },
                                {
                                    internalType: "bool",
                                    name: "openseaFilterEnabled",
                                    type: "bool",
                                },
                                {
                                    internalType: "string",
                                    name: "contractURI",
                                    type: "string",
                                },
                            ],
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "initialize",
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "recipient",
                            type: "address",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "mintTo",
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "recipient",
                            type: "address",
                        },
                        {
                            internalType: "string",
                            name: "customTokenURI",
                            type: "string",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "mintToWithURI",
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "openseaFilterEnabled",
                    outputs: [
                        {
                            internalType: "bool",
                            name: "",
                            type: "bool",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "paymentsEnabled",
                    outputs: [
                        {
                            internalType: "bool",
                            name: "",
                            type: "bool",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "paymentsRecipient",
                    outputs: [
                        {
                            internalType: "address",
                            name: "",
                            type: "address",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "price",
                    outputs: [
                        {
                            internalType: "uint256",
                            name: "",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "primaryRoyaltyRecipient",
                    outputs: [
                        {
                            internalType: "address",
                            name: "",
                            type: "address",
                        },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "recipient",
                            type: "address",
                        },
                        {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "payable",
                    type: "function",
                    name: "publicMint",
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "royaltyBps",
                    outputs: [
                        {
                            internalType: "uint256",
                            name: "",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "string",
                            name: "baseURI_",
                            type: "string",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setBaseURI",
                },
                {
                    inputs: [
                        {
                            internalType: "string",
                            name: "contractURI_",
                            type: "string",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setContractURI",
                },
                {
                    inputs: [
                        {
                            internalType: "string",
                            name: "name_",
                            type: "string",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setName",
                },
                {
                    inputs: [
                        {
                            internalType: "bool",
                            name: "enabled",
                            type: "bool",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setOpenseaFilterEnabled",
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "paymentsRecipient_",
                            type: "address",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setPaymentsRecipient",
                },
                {
                    inputs: [
                        {
                            internalType: "uint256",
                            name: "price_",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setPrice",
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "primaryRoyaltyRecipient_",
                            type: "address",
                        },
                        {
                            internalType: "uint256",
                            name: "royaltyBps_",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setRoyaltyInfo",
                },
                {
                    inputs: [
                        {
                            internalType: "uint256",
                            name: "supplyLimit_",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setSupplyLimit",
                },
                {
                    inputs: [
                        {
                            internalType: "string",
                            name: "symbol_",
                            type: "string",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setSymbol",
                },
                {
                    inputs: [
                        {
                            internalType: "uint256",
                            name: "tokenId",
                            type: "uint256",
                        },
                        {
                            internalType: "string",
                            name: "tokenURI_",
                            type: "string",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setTokenURI",
                },
                {
                    inputs: [
                        {
                            internalType: "bool",
                            name: "value",
                            type: "bool",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setTransferable",
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "supplyLimit",
                    outputs: [
                        {
                            internalType: "uint256",
                            name: "",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "totalSupply",
                    outputs: [
                        {
                            internalType: "uint256",
                            name: "",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "transferable",
                    outputs: [
                        {
                            internalType: "bool",
                            name: "",
                            type: "bool",
                        },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "paymentsRecipient_",
                            type: "address",
                        },
                        {
                            internalType: "uint256",
                            name: "price_",
                            type: "uint256",
                        },
                        {
                            internalType: "uint256",
                            name: "supplyLimit_",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "updatePaymentsParams",
                },
            ],
            devdoc: {
                kind: "dev",
                methods: {
                    "baseURI()": {
                        details: "Get the base URI for the contract.",
                        returns: {
                            _0: "The current base URI.",
                        },
                    },
                    "burn(uint256)": {
                        details: "Burn a specific token.",
                        params: {
                            tokenId: "The id of the token to burn.",
                        },
                    },
                    "contractURI()": {
                        details: "Get the contract URI for the contract.",
                        returns: {
                            _0: "The current contract URI.",
                        },
                    },
                    "hasSetBaseURI()": {
                        details: "Check if the base URI has been set.",
                        returns: {
                            _0: "Whether or not the base URI has been set.",
                        },
                    },
                    "initialize(address[],(address,address,uint256,uint256,uint256,string,string,string,bool,bool,string))":
                        {
                            details: "Initialize the contract. Can only be called once.",
                            params: {
                                admins: "The initial admin of the contract.",
                                params: "collection data to initialize with",
                            },
                        },
                    "mintTo(address)": {
                        details: "Mint a new token to a specific address",
                        params: {
                            recipient: "The address to receive the newly minted token.",
                        },
                    },
                    "mintToWithURI(address,string)": {
                        details: "Mint a token that has a custom tokenURI which overrides the baseURI",
                        params: {
                            customTokenURI: "a full token URI",
                            recipient: "The address to receive the newly minted token.",
                        },
                    },
                    "openseaFilterEnabled()": {
                        details: "Check if the OpenSea filter is enabled.",
                        returns: {
                            _0: "Whether or not the OpenSea filter is currently enabled.",
                        },
                    },
                    "paymentsEnabled()": {
                        details: "represented by the payments recipient set on the contract",
                        returns: {
                            _0: "paymentsEnabled whether or not payments are enabled on the contract",
                        },
                    },
                    "paymentsRecipient()": {
                        details: "Get the payments recipient address.",
                        returns: {
                            _0: "Address of the payments recipient.",
                        },
                    },
                    "price()": {
                        details: "Get the price of a single token.",
                        returns: {
                            _0: "The current price of a single token.",
                        },
                    },
                    "primaryRoyaltyRecipient()": {
                        details: "Get the primary recipient of the royalties.",
                        returns: {
                            _0: "Address of the primary royalty recipient.",
                        },
                    },
                    "publicMint(address,uint256)": {
                        details: "Mint new tokens to a specific address",
                        params: {
                            amount: "The number of tokens to mint.",
                            recipient: "The address to receive the tokens",
                        },
                    },
                    "royaltyBps()": {
                        details: "Get the royalty basis points (bps).",
                        returns: {
                            _0: "The current royalty basis points.",
                        },
                    },
                    "setBaseURI(string)": {
                        details: "Set the baseURI of the token",
                        params: {
                            baseURI_: "The new name of the token.",
                        },
                    },
                    "setContractURI(string)": {
                        details: "Set the contractURI of the token",
                        params: {
                            contractURI_: "The new URI of the contract.",
                        },
                    },
                    "setName(string)": {
                        details: "Set the name of the token.",
                        params: {
                            name_: "The new name of the token.",
                        },
                    },
                    "setOpenseaFilterEnabled(bool)": {
                        details: "Enable or disable the OpenSea filter.",
                        params: {
                            enabled: "The new status of the OpenSea filter.",
                        },
                    },
                    "setPaymentsRecipient(address)": {
                        details: "Sets the address to receive payments.",
                        params: {
                            paymentsRecipient_: "The new address to receive payments.",
                        },
                    },
                    "setPrice(uint256)": {
                        details: "Sets the price of the token.",
                        params: {
                            price_: "The new price of the token.",
                        },
                    },
                    "setRoyaltyInfo(address,uint256)": {
                        details: "Set the royalty information.",
                        params: {
                            primaryRoyaltyRecipient_: "The address to receive the royalties.",
                            royaltyBps_: "The basis points percentage of the royalties.",
                        },
                    },
                    "setSupplyLimit(uint256)": {
                        details: "Sets the maximum supply of the token.",
                        params: {
                            supplyLimit_: "The new maximum supply of the token.",
                        },
                    },
                    "setSymbol(string)": {
                        details: "Set the symbol of the token.",
                        params: {
                            symbol_: "The new name of the token.",
                        },
                    },
                    "setTokenURI(uint256,string)": {
                        details: "Set a custom tokenURI for a token that will override the baseURI",
                        params: {
                            tokenId: "The id of the token.",
                            tokenURI_: "The new URI of the token.",
                        },
                    },
                    "setTransferable(bool)": {
                        details: "Set the transferability of the token.",
                        params: {
                            value: "The new transferability status of the token.",
                        },
                    },
                    "supplyLimit()": {
                        details: "Get the supply limit for the tokens.",
                        returns: {
                            _0: "The current supply limit.",
                        },
                    },
                    "totalSupply()": {
                        details: "Get the current circulating supply",
                        returns: {
                            _0: "The amount of the royalties.",
                        },
                    },
                    "transferable()": {
                        details: "Check if transfers are allowed.",
                        returns: {
                            _0: "Whether or not the transfers are currently allowed.",
                        },
                    },
                    "updatePaymentsParams(address,uint256,uint256)": {
                        details: "Sets all payments related properties at once",
                        params: {
                            paymentsRecipient_:
                                "The new recipient for the Crossmint payments product and public mint function.",
                            price_: "The new price of each token.",
                            supplyLimit_: "The new supply limit for the collection.",
                        },
                    },
                },
                version: 1,
            },
            userdoc: {
                kind: "user",
                methods: {
                    "paymentsEnabled()": {
                        notice: "This should only be enabled through our API",
                    },
                    "paymentsRecipient()": {
                        notice: "this acts as the source of truth for whether or not payments is enabled on a contract.",
                    },
                    "price()": {
                        notice: "the price can be set while payments are disabled for a contract.",
                    },
                    "publicMint(address,uint256)": {
                        notice: "this function should only ever be allowed if payments are enabled on the contract",
                    },
                    "setPaymentsRecipient(address)": {
                        notice: "Setting the zero address here represents disabling payments on the contract",
                    },
                },
                version: 1,
            },
        },
        settings: {
            remappings: [
                "@openzeppelin/=node_modules/@openzeppelin/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=node_modules/hardhat/",
                "operator-filter-registry/=node_modules/operator-filter-registry/",
            ],
            optimizer: {
                enabled: true,
                runs: 200,
            },
            metadata: {
                bytecodeHash: "ipfs",
            },
            compilationTarget: {
                "contracts/mintAPI/interfaces/IUpgradeable721.sol": "IUpgradeable721",
            },
            libraries: {},
        },
        sources: {
            "contracts/mintAPI/interfaces/IUpgradeable721.sol": {
                keccak256: "0xc0b1e60c3a06bd0da2c241e378ff0c9908e73db8e279f84a868081d65e6cdd99",
                urls: [
                    "bzz-raw://4d66f17168c598be16e7cba65f8bf079316365eb4699663b5748a36199041195",
                    "dweb:/ipfs/QmemrwfZrFbcUP9b1ThcxS7k7eK64rRT49qZtzir8p5uMV",
                ],
                license: "UNLICENSED",
            },
        },
        version: 1,
    },
    ast: {
        absolutePath: "contracts/mintAPI/interfaces/IUpgradeable721.sol",
        id: 3484,
        exportedSymbols: {
            IUpgradeable721: [3483],
        },
        nodeType: "SourceUnit",
        src: "39:6880:8",
        nodes: [
            {
                id: 3268,
                nodeType: "PragmaDirective",
                src: "39:24:8",
                nodes: [],
                literals: ["solidity", "^", "0.8", ".19"],
            },
            {
                id: 3483,
                nodeType: "ContractDefinition",
                src: "324:6594:8",
                nodes: [
                    {
                        id: 3292,
                        nodeType: "StructDefinition",
                        src: "421:345:8",
                        nodes: [],
                        canonicalName: "IUpgradeable721.CollectionParams",
                        members: [
                            {
                                constant: false,
                                id: 3271,
                                mutability: "mutable",
                                name: "paymentsRecipient",
                                nameLocation: "463:17:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "455:25:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                },
                                typeName: {
                                    id: 3270,
                                    name: "address",
                                    nodeType: "ElementaryTypeName",
                                    src: "455:7:8",
                                    stateMutability: "nonpayable",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3273,
                                mutability: "mutable",
                                name: "primaryRoyaltyRecipient",
                                nameLocation: "498:23:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "490:31:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                },
                                typeName: {
                                    id: 3272,
                                    name: "address",
                                    nodeType: "ElementaryTypeName",
                                    src: "490:7:8",
                                    stateMutability: "nonpayable",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3275,
                                mutability: "mutable",
                                name: "price",
                                nameLocation: "539:5:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "531:13:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                },
                                typeName: {
                                    id: 3274,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "531:7:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3277,
                                mutability: "mutable",
                                name: "supplyLimit",
                                nameLocation: "562:11:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "554:19:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                },
                                typeName: {
                                    id: 3276,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "554:7:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3279,
                                mutability: "mutable",
                                name: "royaltyBps",
                                nameLocation: "591:10:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "583:18:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                },
                                typeName: {
                                    id: 3278,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "583:7:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3281,
                                mutability: "mutable",
                                name: "name",
                                nameLocation: "618:4:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "611:11:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_string_storage_ptr",
                                    typeString: "string",
                                },
                                typeName: {
                                    id: 3280,
                                    name: "string",
                                    nodeType: "ElementaryTypeName",
                                    src: "611:6:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_storage_ptr",
                                        typeString: "string",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3283,
                                mutability: "mutable",
                                name: "symbol",
                                nameLocation: "639:6:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "632:13:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_string_storage_ptr",
                                    typeString: "string",
                                },
                                typeName: {
                                    id: 3282,
                                    name: "string",
                                    nodeType: "ElementaryTypeName",
                                    src: "632:6:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_storage_ptr",
                                        typeString: "string",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3285,
                                mutability: "mutable",
                                name: "baseURI",
                                nameLocation: "662:7:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "655:14:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_string_storage_ptr",
                                    typeString: "string",
                                },
                                typeName: {
                                    id: 3284,
                                    name: "string",
                                    nodeType: "ElementaryTypeName",
                                    src: "655:6:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_storage_ptr",
                                        typeString: "string",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3287,
                                mutability: "mutable",
                                name: "transferable",
                                nameLocation: "684:12:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "679:17:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_bool",
                                    typeString: "bool",
                                },
                                typeName: {
                                    id: 3286,
                                    name: "bool",
                                    nodeType: "ElementaryTypeName",
                                    src: "679:4:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3289,
                                mutability: "mutable",
                                name: "openseaFilterEnabled",
                                nameLocation: "711:20:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "706:25:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_bool",
                                    typeString: "bool",
                                },
                                typeName: {
                                    id: 3288,
                                    name: "bool",
                                    nodeType: "ElementaryTypeName",
                                    src: "706:4:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                },
                                visibility: "internal",
                            },
                            {
                                constant: false,
                                id: 3291,
                                mutability: "mutable",
                                name: "contractURI",
                                nameLocation: "748:11:8",
                                nodeType: "VariableDeclaration",
                                scope: 3292,
                                src: "741:18:8",
                                stateVariable: false,
                                storageLocation: "default",
                                typeDescriptions: {
                                    typeIdentifier: "t_string_storage_ptr",
                                    typeString: "string",
                                },
                                typeName: {
                                    id: 3290,
                                    name: "string",
                                    nodeType: "ElementaryTypeName",
                                    src: "741:6:8",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_storage_ptr",
                                        typeString: "string",
                                    },
                                },
                                visibility: "internal",
                            },
                        ],
                        name: "CollectionParams",
                        nameLocation: "428:16:8",
                        scope: 3483,
                        visibility: "public",
                    },
                    {
                        id: 3302,
                        nodeType: "FunctionDefinition",
                        src: "949:90:8",
                        nodes: [],
                        documentation: {
                            id: 3293,
                            nodeType: "StructuredDocumentation",
                            src: "772:172:8",
                            text: "@dev Initialize the contract. Can only be called once.\n @param admins The initial admin of the contract.\n @param params collection data to initialize with",
                        },
                        functionSelector: "d448b5c7",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "initialize",
                        nameLocation: "958:10:8",
                        parameters: {
                            id: 3300,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3296,
                                    mutability: "mutable",
                                    name: "admins",
                                    nameLocation: "988:6:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3302,
                                    src: "969:25:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr",
                                        typeString: "address[]",
                                    },
                                    typeName: {
                                        baseType: {
                                            id: 3294,
                                            name: "address",
                                            nodeType: "ElementaryTypeName",
                                            src: "969:7:8",
                                            stateMutability: "nonpayable",
                                            typeDescriptions: {
                                                typeIdentifier: "t_address",
                                                typeString: "address",
                                            },
                                        },
                                        id: 3295,
                                        nodeType: "ArrayTypeName",
                                        src: "969:9:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_array$_t_address_$dyn_storage_ptr",
                                            typeString: "address[]",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3299,
                                    mutability: "mutable",
                                    name: "params",
                                    nameLocation: "1022:6:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3302,
                                    src: "996:32:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_struct$_CollectionParams_$3292_calldata_ptr",
                                        typeString: "struct IUpgradeable721.CollectionParams",
                                    },
                                    typeName: {
                                        id: 3298,
                                        nodeType: "UserDefinedTypeName",
                                        pathNode: {
                                            id: 3297,
                                            name: "CollectionParams",
                                            nameLocations: ["996:16:8"],
                                            nodeType: "IdentifierPath",
                                            referencedDeclaration: 3292,
                                            src: "996:16:8",
                                        },
                                        referencedDeclaration: 3292,
                                        src: "996:16:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_struct$_CollectionParams_$3292_storage_ptr",
                                            typeString: "struct IUpgradeable721.CollectionParams",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "968:61:8",
                        },
                        returnParameters: {
                            id: 3301,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "1038:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3312,
                        nodeType: "FunctionDefinition",
                        src: "1415:105:8",
                        nodes: [],
                        documentation: {
                            id: 3303,
                            nodeType: "StructuredDocumentation",
                            src: "1124:286:8",
                            text: "@dev Sets all payments related properties at once\n @param paymentsRecipient_ The new recipient for the Crossmint payments product and public mint function.\n @param supplyLimit_ The new supply limit for the collection.\n @param price_ The new price of each token.",
                        },
                        functionSelector: "1a0251b0",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "updatePaymentsParams",
                        nameLocation: "1424:20:8",
                        parameters: {
                            id: 3310,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3305,
                                    mutability: "mutable",
                                    name: "paymentsRecipient_",
                                    nameLocation: "1453:18:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3312,
                                    src: "1445:26:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3304,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "1445:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3307,
                                    mutability: "mutable",
                                    name: "price_",
                                    nameLocation: "1481:6:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3312,
                                    src: "1473:14:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3306,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "1473:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3309,
                                    mutability: "mutable",
                                    name: "supplyLimit_",
                                    nameLocation: "1497:12:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3312,
                                    src: "1489:20:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3308,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "1489:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "1444:66:8",
                        },
                        returnParameters: {
                            id: 3311,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "1519:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3318,
                        nodeType: "FunctionDefinition",
                        src: "1618:43:8",
                        nodes: [],
                        documentation: {
                            id: 3313,
                            nodeType: "StructuredDocumentation",
                            src: "1526:87:8",
                            text: "@dev Sets the price of the token.\n @param price_ The new price of the token.",
                        },
                        functionSelector: "91b7f5ed",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setPrice",
                        nameLocation: "1627:8:8",
                        parameters: {
                            id: 3316,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3315,
                                    mutability: "mutable",
                                    name: "price_",
                                    nameLocation: "1644:6:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3318,
                                    src: "1636:14:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3314,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "1636:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "1635:16:8",
                        },
                        returnParameters: {
                            id: 3317,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "1660:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3324,
                        nodeType: "FunctionDefinition",
                        src: "1783:55:8",
                        nodes: [],
                        documentation: {
                            id: 3319,
                            nodeType: "StructuredDocumentation",
                            src: "1667:111:8",
                            text: "@dev Sets the maximum supply of the token.\n @param supplyLimit_ The new maximum supply of the token.",
                        },
                        functionSelector: "361fab25",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setSupplyLimit",
                        nameLocation: "1792:14:8",
                        parameters: {
                            id: 3322,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3321,
                                    mutability: "mutable",
                                    name: "supplyLimit_",
                                    nameLocation: "1815:12:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3324,
                                    src: "1807:20:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3320,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "1807:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "1806:22:8",
                        },
                        returnParameters: {
                            id: 3323,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "1837:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3330,
                        nodeType: "FunctionDefinition",
                        src: "2058:67:8",
                        nodes: [],
                        documentation: {
                            id: 3325,
                            nodeType: "StructuredDocumentation",
                            src: "1844:209:8",
                            text: "@notice Setting the zero address here represents disabling payments on the contract\n @dev Sets the address to receive payments.\n @param paymentsRecipient_ The new address to receive payments.",
                        },
                        functionSelector: "c1787c7c",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setPaymentsRecipient",
                        nameLocation: "2067:20:8",
                        parameters: {
                            id: 3328,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3327,
                                    mutability: "mutable",
                                    name: "paymentsRecipient_",
                                    nameLocation: "2096:18:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3330,
                                    src: "2088:26:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3326,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "2088:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "2087:28:8",
                        },
                        returnParameters: {
                            id: 3329,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "2124:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3336,
                        nodeType: "FunctionDefinition",
                        src: "2219:49:8",
                        nodes: [],
                        documentation: {
                            id: 3331,
                            nodeType: "StructuredDocumentation",
                            src: "2131:83:8",
                            text: "@dev Set the name of the token.\n @param name_ The new name of the token.",
                        },
                        functionSelector: "c47f0027",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setName",
                        nameLocation: "2228:7:8",
                        parameters: {
                            id: 3334,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3333,
                                    mutability: "mutable",
                                    name: "name_",
                                    nameLocation: "2252:5:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3336,
                                    src: "2236:21:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_calldata_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3332,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "2236:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "2235:23:8",
                        },
                        returnParameters: {
                            id: 3335,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "2267:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3342,
                        nodeType: "FunctionDefinition",
                        src: "2366:53:8",
                        nodes: [],
                        documentation: {
                            id: 3337,
                            nodeType: "StructuredDocumentation",
                            src: "2274:87:8",
                            text: "@dev Set the symbol of the token.\n @param symbol_ The new name of the token.",
                        },
                        functionSelector: "b84c8246",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setSymbol",
                        nameLocation: "2375:9:8",
                        parameters: {
                            id: 3340,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3339,
                                    mutability: "mutable",
                                    name: "symbol_",
                                    nameLocation: "2401:7:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3342,
                                    src: "2385:23:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_calldata_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3338,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "2385:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "2384:25:8",
                        },
                        returnParameters: {
                            id: 3341,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "2418:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3348,
                        nodeType: "FunctionDefinition",
                        src: "2518:55:8",
                        nodes: [],
                        documentation: {
                            id: 3343,
                            nodeType: "StructuredDocumentation",
                            src: "2425:88:8",
                            text: "@dev Set the baseURI of the token\n @param baseURI_ The new name of the token.",
                        },
                        functionSelector: "55f804b3",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setBaseURI",
                        nameLocation: "2527:10:8",
                        parameters: {
                            id: 3346,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3345,
                                    mutability: "mutable",
                                    name: "baseURI_",
                                    nameLocation: "2554:8:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3348,
                                    src: "2538:24:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_calldata_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3344,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "2538:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "2537:26:8",
                        },
                        returnParameters: {
                            id: 3347,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "2572:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3354,
                        nodeType: "FunctionDefinition",
                        src: "2682:63:8",
                        nodes: [],
                        documentation: {
                            id: 3349,
                            nodeType: "StructuredDocumentation",
                            src: "2579:98:8",
                            text: "@dev Set the contractURI of the token\n @param contractURI_ The new URI of the contract.",
                        },
                        functionSelector: "938e3d7b",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setContractURI",
                        nameLocation: "2691:14:8",
                        parameters: {
                            id: 3352,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3351,
                                    mutability: "mutable",
                                    name: "contractURI_",
                                    nameLocation: "2722:12:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3354,
                                    src: "2706:28:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_calldata_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3350,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "2706:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "2705:30:8",
                        },
                        returnParameters: {
                            id: 3353,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "2744:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3360,
                        nodeType: "FunctionDefinition",
                        src: "2863:56:8",
                        nodes: [],
                        documentation: {
                            id: 3355,
                            nodeType: "StructuredDocumentation",
                            src: "2751:107:8",
                            text: "@dev Enable or disable the OpenSea filter.\n @param enabled The new status of the OpenSea filter.",
                        },
                        functionSelector: "f41f30f7",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setOpenseaFilterEnabled",
                        nameLocation: "2872:23:8",
                        parameters: {
                            id: 3358,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3357,
                                    mutability: "mutable",
                                    name: "enabled",
                                    nameLocation: "2901:7:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3360,
                                    src: "2896:12:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                    typeName: {
                                        id: 3356,
                                        name: "bool",
                                        nodeType: "ElementaryTypeName",
                                        src: "2896:4:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_bool",
                                            typeString: "bool",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "2895:14:8",
                        },
                        returnParameters: {
                            id: 3359,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "2918:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3368,
                        nodeType: "FunctionDefinition",
                        src: "3118:88:8",
                        nodes: [],
                        documentation: {
                            id: 3361,
                            nodeType: "StructuredDocumentation",
                            src: "2925:188:8",
                            text: "@dev Set the royalty information.\n @param primaryRoyaltyRecipient_ The address to receive the royalties.\n @param royaltyBps_ The basis points percentage of the royalties.",
                        },
                        functionSelector: "e2e784d5",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setRoyaltyInfo",
                        nameLocation: "3127:14:8",
                        parameters: {
                            id: 3366,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3363,
                                    mutability: "mutable",
                                    name: "primaryRoyaltyRecipient_",
                                    nameLocation: "3150:24:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3368,
                                    src: "3142:32:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3362,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "3142:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3365,
                                    mutability: "mutable",
                                    name: "royaltyBps_",
                                    nameLocation: "3184:11:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3368,
                                    src: "3176:19:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3364,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "3176:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "3141:55:8",
                        },
                        returnParameters: {
                            id: 3367,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "3205:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3374,
                        nodeType: "FunctionDefinition",
                        src: "3329:46:8",
                        nodes: [],
                        documentation: {
                            id: 3369,
                            nodeType: "StructuredDocumentation",
                            src: "3212:112:8",
                            text: "@dev Set the transferability of the token.\n @param value The new transferability status of the token.",
                        },
                        functionSelector: "9cd23707",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setTransferable",
                        nameLocation: "3338:15:8",
                        parameters: {
                            id: 3372,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3371,
                                    mutability: "mutable",
                                    name: "value",
                                    nameLocation: "3359:5:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3374,
                                    src: "3354:10:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                    typeName: {
                                        id: 3370,
                                        name: "bool",
                                        nodeType: "ElementaryTypeName",
                                        src: "3354:4:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_bool",
                                            typeString: "bool",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "3353:12:8",
                        },
                        returnParameters: {
                            id: 3373,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "3374:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3382,
                        nodeType: "FunctionDefinition",
                        src: "3554:74:8",
                        nodes: [],
                        documentation: {
                            id: 3375,
                            nodeType: "StructuredDocumentation",
                            src: "3381:168:8",
                            text: "@dev Set a custom tokenURI for a token that will override the baseURI\n @param tokenId The id of the token.\n @param tokenURI_ The new URI of the token.",
                        },
                        functionSelector: "162094c4",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "setTokenURI",
                        nameLocation: "3563:11:8",
                        parameters: {
                            id: 3380,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3377,
                                    mutability: "mutable",
                                    name: "tokenId",
                                    nameLocation: "3583:7:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3382,
                                    src: "3575:15:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3376,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "3575:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3379,
                                    mutability: "mutable",
                                    name: "tokenURI_",
                                    nameLocation: "3608:9:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3382,
                                    src: "3592:25:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_calldata_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3378,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "3592:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "3574:44:8",
                        },
                        returnParameters: {
                            id: 3381,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "3627:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3388,
                        nodeType: "FunctionDefinition",
                        src: "3722:40:8",
                        nodes: [],
                        documentation: {
                            id: 3383,
                            nodeType: "StructuredDocumentation",
                            src: "3634:83:8",
                            text: "@dev Burn a specific token.\n @param tokenId The id of the token to burn.",
                        },
                        functionSelector: "42966c68",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "burn",
                        nameLocation: "3731:4:8",
                        parameters: {
                            id: 3386,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3385,
                                    mutability: "mutable",
                                    name: "tokenId",
                                    nameLocation: "3744:7:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3388,
                                    src: "3736:15:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3384,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "3736:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "3735:17:8",
                        },
                        returnParameters: {
                            id: 3387,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "3761:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3394,
                        nodeType: "FunctionDefinition",
                        src: "3892:44:8",
                        nodes: [],
                        documentation: {
                            id: 3389,
                            nodeType: "StructuredDocumentation",
                            src: "3768:119:8",
                            text: "@dev Mint a new token to a specific address\n @param recipient The address to receive the newly minted token.",
                        },
                        functionSelector: "755edd17",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "mintTo",
                        nameLocation: "3901:6:8",
                        parameters: {
                            id: 3392,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3391,
                                    mutability: "mutable",
                                    name: "recipient",
                                    nameLocation: "3916:9:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3394,
                                    src: "3908:17:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3390,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "3908:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "3907:19:8",
                        },
                        returnParameters: {
                            id: 3393,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "3935:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3402,
                        nodeType: "FunctionDefinition",
                        src: "4142:83:8",
                        nodes: [],
                        documentation: {
                            id: 3395,
                            nodeType: "StructuredDocumentation",
                            src: "3942:195:8",
                            text: "@dev Mint a token that has a custom tokenURI which overrides the baseURI\n @param recipient The address to receive the newly minted token.\n @param customTokenURI a full token URI",
                        },
                        functionSelector: "d65971f3",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "mintToWithURI",
                        nameLocation: "4151:13:8",
                        parameters: {
                            id: 3400,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3397,
                                    mutability: "mutable",
                                    name: "recipient",
                                    nameLocation: "4173:9:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3402,
                                    src: "4165:17:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3396,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "4165:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3399,
                                    mutability: "mutable",
                                    name: "customTokenURI",
                                    nameLocation: "4200:14:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3402,
                                    src: "4184:30:8",
                                    stateVariable: false,
                                    storageLocation: "calldata",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_calldata_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3398,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "4184:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "4164:51:8",
                        },
                        returnParameters: {
                            id: 3401,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "4224:0:8",
                        },
                        scope: 3483,
                        stateMutability: "nonpayable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3410,
                        nodeType: "FunctionDefinition",
                        src: "4491:72:8",
                        nodes: [],
                        documentation: {
                            id: 3403,
                            nodeType: "StructuredDocumentation",
                            src: "4231:255:8",
                            text: "@dev Mint new tokens to a specific address\n @param recipient The address to receive the tokens\n @param amount The number of tokens to mint.\n @notice this function should only ever be allowed if payments are enabled on the contract",
                        },
                        functionSelector: "ce6df2b9",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "publicMint",
                        nameLocation: "4500:10:8",
                        parameters: {
                            id: 3408,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3405,
                                    mutability: "mutable",
                                    name: "recipient",
                                    nameLocation: "4519:9:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3410,
                                    src: "4511:17:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3404,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "4511:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                                {
                                    constant: false,
                                    id: 3407,
                                    mutability: "mutable",
                                    name: "amount",
                                    nameLocation: "4538:6:8",
                                    nodeType: "VariableDeclaration",
                                    scope: 3410,
                                    src: "4530:14:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3406,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "4530:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "4510:35:8",
                        },
                        returnParameters: {
                            id: 3409,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "4562:0:8",
                        },
                        scope: 3483,
                        stateMutability: "payable",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3416,
                        nodeType: "FunctionDefinition",
                        src: "4758:53:8",
                        nodes: [],
                        documentation: {
                            id: 3411,
                            nodeType: "StructuredDocumentation",
                            src: "4645:108:8",
                            text: "@dev Check if transfers are allowed.\n @return Whether or not the transfers are currently allowed.",
                        },
                        functionSelector: "92ff0d31",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "transferable",
                        nameLocation: "4767:12:8",
                        parameters: {
                            id: 3412,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "4779:2:8",
                        },
                        returnParameters: {
                            id: 3415,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3414,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3416,
                                    src: "4805:4:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                    typeName: {
                                        id: 3413,
                                        name: "bool",
                                        nodeType: "ElementaryTypeName",
                                        src: "4805:4:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_bool",
                                            typeString: "bool",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "4804:6:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3422,
                        nodeType: "FunctionDefinition",
                        src: "4932:67:8",
                        nodes: [],
                        documentation: {
                            id: 3417,
                            nodeType: "StructuredDocumentation",
                            src: "4817:110:8",
                            text: "@dev Get the primary recipient of the royalties.\n @return Address of the primary royalty recipient.",
                        },
                        functionSelector: "a5352023",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "primaryRoyaltyRecipient",
                        nameLocation: "4941:23:8",
                        parameters: {
                            id: 3418,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "4964:2:8",
                        },
                        returnParameters: {
                            id: 3421,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3420,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3422,
                                    src: "4990:7:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3419,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "4990:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "4989:9:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3428,
                        nodeType: "FunctionDefinition",
                        src: "5130:61:8",
                        nodes: [],
                        documentation: {
                            id: 3423,
                            nodeType: "StructuredDocumentation",
                            src: "5005:120:8",
                            text: "@dev Check if the OpenSea filter is enabled.\n @return Whether or not the OpenSea filter is currently enabled.",
                        },
                        functionSelector: "a8f84b34",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "openseaFilterEnabled",
                        nameLocation: "5139:20:8",
                        parameters: {
                            id: 3424,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "5159:2:8",
                        },
                        returnParameters: {
                            id: 3427,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3426,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3428,
                                    src: "5185:4:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                    typeName: {
                                        id: 3425,
                                        name: "bool",
                                        nodeType: "ElementaryTypeName",
                                        src: "5185:4:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_bool",
                                            typeString: "bool",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "5184:6:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3434,
                        nodeType: "FunctionDefinition",
                        src: "5296:54:8",
                        nodes: [],
                        documentation: {
                            id: 3429,
                            nodeType: "StructuredDocumentation",
                            src: "5197:94:8",
                            text: "@dev Get the royalty basis points (bps).\n @return The current royalty basis points.",
                        },
                        functionSelector: "c63adb2b",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "royaltyBps",
                        nameLocation: "5305:10:8",
                        parameters: {
                            id: 3430,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "5315:2:8",
                        },
                        returnParameters: {
                            id: 3433,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3432,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3434,
                                    src: "5341:7:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3431,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "5341:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "5340:9:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3440,
                        nodeType: "FunctionDefinition",
                        src: "5442:57:8",
                        nodes: [],
                        documentation: {
                            id: 3435,
                            nodeType: "StructuredDocumentation",
                            src: "5356:81:8",
                            text: "@dev Get the base URI for the contract.\n @return The current base URI.",
                        },
                        functionSelector: "6c0360eb",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "baseURI",
                        nameLocation: "5451:7:8",
                        parameters: {
                            id: 3436,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "5458:2:8",
                        },
                        returnParameters: {
                            id: 3439,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3438,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3440,
                                    src: "5484:13:8",
                                    stateVariable: false,
                                    storageLocation: "memory",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_memory_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3437,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "5484:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "5483:15:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3446,
                        nodeType: "FunctionDefinition",
                        src: "5612:54:8",
                        nodes: [],
                        documentation: {
                            id: 3441,
                            nodeType: "StructuredDocumentation",
                            src: "5505:102:8",
                            text: "@dev Check if the base URI has been set.\n @return Whether or not the base URI has been set.",
                        },
                        functionSelector: "5958b247",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "hasSetBaseURI",
                        nameLocation: "5621:13:8",
                        parameters: {
                            id: 3442,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "5634:2:8",
                        },
                        returnParameters: {
                            id: 3445,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3444,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3446,
                                    src: "5660:4:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                    typeName: {
                                        id: 3443,
                                        name: "bool",
                                        nodeType: "ElementaryTypeName",
                                        src: "5660:4:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_bool",
                                            typeString: "bool",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "5659:6:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3452,
                        nodeType: "FunctionDefinition",
                        src: "5766:61:8",
                        nodes: [],
                        documentation: {
                            id: 3447,
                            nodeType: "StructuredDocumentation",
                            src: "5672:89:8",
                            text: "@dev Get the contract URI for the contract.\n @return The current contract URI.",
                        },
                        functionSelector: "e8a3d485",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "contractURI",
                        nameLocation: "5775:11:8",
                        parameters: {
                            id: 3448,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "5786:2:8",
                        },
                        returnParameters: {
                            id: 3451,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3450,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3452,
                                    src: "5812:13:8",
                                    stateVariable: false,
                                    storageLocation: "memory",
                                    typeDescriptions: {
                                        typeIdentifier: "t_string_memory_ptr",
                                        typeString: "string",
                                    },
                                    typeName: {
                                        id: 3449,
                                        name: "string",
                                        nodeType: "ElementaryTypeName",
                                        src: "5812:6:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_string_storage_ptr",
                                            typeString: "string",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "5811:15:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3458,
                        nodeType: "FunctionDefinition",
                        src: "6036:61:8",
                        nodes: [],
                        documentation: {
                            id: 3453,
                            nodeType: "StructuredDocumentation",
                            src: "5833:198:8",
                            text: "@dev Get the payments recipient address.\n @return Address of the payments recipient.\n @notice this acts as the source of truth for whether or not payments is enabled on a contract.",
                        },
                        functionSelector: "9c3ab12d",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "paymentsRecipient",
                        nameLocation: "6045:17:8",
                        parameters: {
                            id: 3454,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "6062:2:8",
                        },
                        returnParameters: {
                            id: 3457,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3456,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3458,
                                    src: "6088:7:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_address",
                                        typeString: "address",
                                    },
                                    typeName: {
                                        id: 3455,
                                        name: "address",
                                        nodeType: "ElementaryTypeName",
                                        src: "6088:7:8",
                                        stateMutability: "nonpayable",
                                        typeDescriptions: {
                                            typeIdentifier: "t_address",
                                            typeString: "address",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "6087:9:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3464,
                        nodeType: "FunctionDefinition",
                        src: "6283:49:8",
                        nodes: [],
                        documentation: {
                            id: 3459,
                            nodeType: "StructuredDocumentation",
                            src: "6103:175:8",
                            text: "@dev Get the price of a single token.\n @return The current price of a single token.\n @notice the price can be set while payments are disabled for a contract.",
                        },
                        functionSelector: "a035b1fe",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "price",
                        nameLocation: "6292:5:8",
                        parameters: {
                            id: 3460,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "6297:2:8",
                        },
                        returnParameters: {
                            id: 3463,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3462,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3464,
                                    src: "6323:7:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3461,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "6323:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "6322:9:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3470,
                        nodeType: "FunctionDefinition",
                        src: "6430:55:8",
                        nodes: [],
                        documentation: {
                            id: 3465,
                            nodeType: "StructuredDocumentation",
                            src: "6338:87:8",
                            text: "@dev Get the supply limit for the tokens.\n @return The current supply limit.",
                        },
                        functionSelector: "19d1997a",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "supplyLimit",
                        nameLocation: "6439:11:8",
                        parameters: {
                            id: 3466,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "6450:2:8",
                        },
                        returnParameters: {
                            id: 3469,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3468,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3470,
                                    src: "6476:7:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3467,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "6476:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "6475:9:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3476,
                        nodeType: "FunctionDefinition",
                        src: "6584:55:8",
                        nodes: [],
                        documentation: {
                            id: 3471,
                            nodeType: "StructuredDocumentation",
                            src: "6491:88:8",
                            text: "@dev Get the current circulating supply\n @return The amount of the royalties.",
                        },
                        functionSelector: "18160ddd",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "totalSupply",
                        nameLocation: "6593:11:8",
                        parameters: {
                            id: 3472,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "6604:2:8",
                        },
                        returnParameters: {
                            id: 3475,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3474,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3476,
                                    src: "6630:7:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                    },
                                    typeName: {
                                        id: 3473,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "6630:7:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "6629:9:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                    {
                        id: 3482,
                        nodeType: "FunctionDefinition",
                        src: "6860:56:8",
                        nodes: [],
                        documentation: {
                            id: 3477,
                            nodeType: "StructuredDocumentation",
                            src: "6645:210:8",
                            text: "@dev represented by the payments recipient set on the contract\n @return paymentsEnabled whether or not payments are enabled on the contract\n @notice This should only be enabled through our API",
                        },
                        functionSelector: "a9ccdc01",
                        implemented: false,
                        kind: "function",
                        modifiers: [],
                        name: "paymentsEnabled",
                        nameLocation: "6869:15:8",
                        parameters: {
                            id: 3478,
                            nodeType: "ParameterList",
                            parameters: [],
                            src: "6884:2:8",
                        },
                        returnParameters: {
                            id: 3481,
                            nodeType: "ParameterList",
                            parameters: [
                                {
                                    constant: false,
                                    id: 3480,
                                    mutability: "mutable",
                                    name: "",
                                    nameLocation: "-1:-1:-1",
                                    nodeType: "VariableDeclaration",
                                    scope: 3482,
                                    src: "6910:4:8",
                                    stateVariable: false,
                                    storageLocation: "default",
                                    typeDescriptions: {
                                        typeIdentifier: "t_bool",
                                        typeString: "bool",
                                    },
                                    typeName: {
                                        id: 3479,
                                        name: "bool",
                                        nodeType: "ElementaryTypeName",
                                        src: "6910:4:8",
                                        typeDescriptions: {
                                            typeIdentifier: "t_bool",
                                            typeString: "bool",
                                        },
                                    },
                                    visibility: "internal",
                                },
                            ],
                            src: "6909:6:8",
                        },
                        scope: 3483,
                        stateMutability: "view",
                        virtual: false,
                        visibility: "external",
                    },
                ],
                abstract: false,
                baseContracts: [],
                canonicalName: "IUpgradeable721",
                contractDependencies: [],
                contractKind: "interface",
                documentation: {
                    id: 3269,
                    nodeType: "StructuredDocumentation",
                    src: "250:74:8",
                    text: "@title Upgradeable721\n @notice Crossmint's NFT Collection Contract",
                },
                fullyImplemented: false,
                linearizedBaseContracts: [3483],
                name: "IUpgradeable721",
                nameLocation: "334:15:8",
                scope: 3484,
                usedErrors: [],
            },
        ],
        license: "UNLICENSED",
    },
    id: 8,
};
